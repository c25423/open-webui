name: (c25423) Sync with upstream

on:
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/open-webui/open-webui.git
          git fetch upstream

      - name: Sync main branch with upstream
        run: |
          git checkout -B main origin/main
          git reset --hard upstream/main
          git push --force-with-lease origin main

      - name: Tag main branch
        run: |
          # Get the current version from package.json
          VERSION=$(jq -r '.version' package.json)
          TAG_NAME="v${VERSION}"
          echo "Checking for tag ${TAG_NAME} on origin"

          # Check if the tag already exists on the remote
          # 'git ls-remote' lists refs on the remote. We grep for our specific tag.
          # The '!' negates the exit code, so the 'if' runs if the tag is NOT found.
          if ! git ls-remote --tags origin | grep -q "refs/tags/${TAG_NAME}$"; then
            echo "Tag ${TAG_NAME} not found. Creating and pushing..."
            git tag -d ${TAG_NAME} || true
            git tag ${TAG_NAME}
            git push origin ${TAG_NAME}
          else
            echo "Tag ${TAG_NAME} already exists. Skipping."
          fi

      - name: Rebase personal branch onto main
        run: |
          git checkout -B c25423 origin/c25423
          git rebase main
          git push --force-with-lease origin c25423

      - name: Tag c25423 branch
        run: |
          # Get the current version from package.json
          VERSION=$(jq -r '.version' package.json)
          TAG_NAME="v${VERSION}-c25423"
          echo "Checking for tag ${TAG_NAME} on origin"

          # Check if the tag already exists on the remote
          if ! git ls-remote --tags origin | grep -q "refs/tags/${TAG_NAME}$"; then
            echo "Tag ${TAG_NAME} not found. Creating and pushing..."
            git tag -d ${TAG_NAME} || true
            git tag ${TAG_NAME}
            git push origin ${TAG_NAME}
          else
            echo "Tag ${TAG_NAME} already exists. Skipping."
          fi